{{define "stripe-js-one-off"}}
<script src="https://js.stripe.com/v3/"></script>

<script>
    let card;
    let stripe;
    const cardMessages = document.getElementById('card-messages');
    const payButton = document.getElementById('pay-button');
    const processing = document.getElementById('processing-payment')
    stripe = Stripe('{{.StripePublishableKey}}')


    function showPayButton(){
        payButton.classList.remove('d-none');
        processing.classList.add('d-none');
    }

    function hidePayButton(){
        payButton.classList.add('d-none');
        processing.classList.remove('d-none');
    }

    function showCardError(msg){
        cardMessages.classList.add('alert')
        cardMessages.classList.add('alert-danger')
        cardMessages.classList.remove('alert-success')
        cardMessages.classList.remove('d-none');
        processing.classList.remove('d-none');
        document.getElementById('card-errors').classList.add('d-none');
        cardMessages.innerText = msg
        
    }

    function showCardSuccess(){
        cardMessages.classList.add('alert')
        cardMessages.classList.add('alert-success')
        cardMessages.classList.remove('alert-danger')
        cardMessages.classList.remove('d-none');
        cardMessages.innerText = "Transaction Successful"
        processing.classList.add('d-none');
    }

    function val() {
        let form = document.getElementById('charge_form')
        if (form.checkValidity() === false) {
            this.event.preventDefault();
            this.event.stopPropagation();
            form.classList.add('was-validated');
            return
        }
        form.classList.add('was-validated');
        hidePayButton();
        
        let amountToCharge = document.getElementById('amount').value;
        let payload = {
            amount : amountToCharge,
            currency: 'cad',
        }

           const requestOptions = {
            method: 'post',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload),
        }

        fetch('{{.API}}/api/payment-intent', requestOptions)
        .then(response => response.text())
        .then(response => {
            let data;
            try {
                data = JSON.parse(response)
                stripe.confirmCardPayment(data.client_secret, {
                    payment_method: {
                        card: card,
                        billing_details: {
                            name: document.getElementById('cardholder_name').value,
                        }   
                    }
                }).then(function(result) {
                    if(result.error) {
                        //card declined, or something went wrong with the card
                        showCardError(result.error.message)
                        showPayButton();
                    } else if(result.paymentIntent) {
                        if(result.paymentIntent.status === "succeeded"){
                            //we have charge the card
                            document.getElementById('payment_method').value = result.paymentIntent.payment_method;
                            document.getElementById('payment_intent').value = result.paymentIntent.id;
                            document.getElementById('payment_amount').value = result.paymentIntent.amount;
                            document.getElementById('payment_currency').value = result.paymentIntent.currency;
                            showCardSuccess();
                            //submit the form
                            document.getElementById('charge_form').submit();

                        }
                    }
                })
            } catch(err) {
                console.log(err)
                showCardError('Invalid response from payment gateway')
                showPayButtons();
            }
        })
    }

    (function() {
        //Create stripe & elements
        const elements = stripe.elements();
        const style = {
            base: {
                fontSize: '16px',
                lineHeight: '20px'
            }
        };

        //create cart entry
        card = elements.create('card', {
            style: style,
            hidePostalCode: true,
        });
        card.mount('#card-element')

        //check for input errors
        card.addEventListener('change', function(event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.classList.remove('d-none');
                displayError.classList.add('alert');
                displayError.textContent = event.error.message;
            } else {
                displayError.classList.add('d-none');
                displayError.classList.add('alert');
                displayError.textContent = '';
            }
        })
    })();
</script>

{{end}}