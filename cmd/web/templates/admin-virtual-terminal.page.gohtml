{{template "admin" .}}

{{define "title"}}
Virtual Terminal
{{end}}

{{define "css"}}
<style>
  .d-none {
  display: none !important;
}
.receipt{
  color: #fff;
  background-color: #081D2E;
  font-size: 15px;
  font-weight: 500; 
  padding: 10px; 
  border-radius: 5px;
}
</style>
{{end}}

{{define "content"}}
<div class="row">
  <div class="col-md-12 col-sm-12 col-xs-12">
    <div class="x_panel">
      <div class="x_title">
        <div class="alert alert-danger text-center d-none" id="card-messages"></div>
        <p class="text-center"><span id="receipt" class="d-none receipt">Bank Return Code:</span> 
          <span class="d-none ms-2 p-1 receipt" id="bank-return-code">5432345sdafsdfsar32wresw</span></p>
        <ul class="nav navbar-right panel_toolbox">
          <li><a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
          </li>
        </ul>
        <div class="clearfix"></div>
      </div>
      <div class="x_content">
        <form action="" method="post" id="charge_form" class="form-horizontal form-label-left" name="charge_form"
          novalidate>
          <h1 class="text-center">
            <span style="color: black;" class="label label-success">
              Virtual Terminal
            </span>
          </h1>
          <hr>

          <div class="item form-group">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="cardholder_name">Name on Card<span
                class="required">*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
              <input id="cardholder_name" class="form-control col-md-7 col-xs-12" data-validate-length-range="6"
                data-validate-words="2" name="cardholder_name" placeholder="e.g Samiul Islam" required="required"
                type="text">
            </div>
          </div>

          <div class="item form-group">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="cardholder_email">Email <span
                class="required">*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
              <input type="email" id="cardholder_email" class="form-control col-md-7 col-xs-12" name="cardholder_email"
                required="required">
            </div>
          </div>

          <div class="item form-group">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="charge_amount">Amount<span
                class="required">*</span>
            </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
              <input type="text" id="charge_amount" class="form-control col-md-7 col-xs-12" name="charge_amount"
                data-validate-linked="email" required="required">
            </div>
          </div>

          <div class="item form-group">
            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="charge_amount">Credit Card<span
                class="required">*</span>
            </label>
              <div class="col-md-6 col-sm-6 col-xs-12">
                <div id="card-element" class="form-control"></div>
                <div style="z-index: 10;" class="alert alert-danger text-center" id="card-errors" role="alert"></div>
                <div style="z-index: 10;" class="alert alert-success text-center" id="card-success" role="alert"></div>
              </div>
            </div>
          </div>

          <div class="ln_solid"></div>
          <div class="form-group text-center">
            <div class="col-md-6 col-md-offset-3">
              <a href="javascript:void(0)" id="pay-button" class="btn btn-primary" onclick="val()">Validate &
                Charge Card</a>
                <a href="/admin/virtual-terminal" id="reset-button" class="d-none btn btn-primary">Charge Another Card</a>
              <div id="processing-payment" class="text-center d-none">
                <div class="spinner-border text-success" role="status">
                    <span class="visually-hidden">Processing...</span>
                </div>
              </div>
            </div>
          </div>

          <!-- Hidden fields -->
          <input type="hidden" name="amount" id="amount">
          <input type="hidden" name="payment_intent" id="payment_intent">
          <input type="hidden" name="payment_method" id="payment_method">
          <input type="hidden" name="payment_amount" id="payment_amount">
          <input type="hidden" name="payment_currency" id="payment_currency">
        </form>
      </div>
    </div>
  </div>
</div>
{{end}}

{{define "js"}}
<script src="https://js.stripe.com/v3/"></script>
<script>
  checkAuth();
  
  document.getElementById("charge_amount").addEventListener("change", function (evt) {
    if (evt.target.value !== "") {
      document.getElementById("amount").value = parseInt((evt.target.value * 100), 10);
    } else {
      document.getElementById("amount").value = 0;
    }
  })
</script>
<script>
  let card;
  let stripe;
  const cardMessages = document.getElementById('card-messages');
  const payButton = document.getElementById('pay-button');
  const processing = document.getElementById('processing-payment')
  stripe = Stripe('{{.StripePublishableKey}}')


  function showPayButton() {
    payButton.classList.remove('d-none');
    processing.classList.add('d-none');
  }

  function hidePayButton() {
    payButton.classList.add('d-none');
    processing.classList.remove('d-none');
  }

  function showCardError(msg) {
      cardMessages.classList.add('alert')
      cardMessages.classList.add('alert-danger')
      cardMessages.classList.remove('alert-success')
      cardMessages.classList.remove('d-none');
      processing.classList.remove('d-none');
      document.getElementById('card-errors').classList.add('d-none');
      cardMessages.innerText = msg

  }

  function showCardSuccess() {
    cardMessages.classList.add('alert')
    cardMessages.classList.add('alert-success')
    cardMessages.classList.remove('alert-danger')
    cardMessages.classList.remove('d-none');
    cardMessages.innerText = "Transaction Successful"
    processing.classList.add('d-none');
  }

  function val() {
      let form = document.getElementById('charge_form')
      if (form.checkValidity() === false) {
          this.event.preventDefault();
          this.event.stopPropagation();
          form.classList.add('was-validated');
          return
      }
      form.classList.add('was-validated');
      hidePayButton();

      let amountToCharge = document.getElementById('amount').value;
      let payload = {
          amount: amountToCharge,
          currency: 'cad',
      }

      const requestOptions = {
          method: 'post',
          headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
          },
          body: JSON.stringify(payload),
      }

      fetch('{{.API}}/api/payment-intent', requestOptions)
          .then(response => response.text())
          .then(response => {
              let data;
              try {
                  data = JSON.parse(response)
                  stripe.confirmCardPayment(data.client_secret, {
                      payment_method: {
                          card: card,
                          billing_details: {
                              name: document.getElementById('cardholder_name').value,
                          }
                      }
                  }).then(function (result) {
                      if (result.error) {
                          //card declined, or something went wrong with the card
                          showCardError(result.error.message)
                          showPayButton();
                      } else if (result.paymentIntent) {
                          if (result.paymentIntent.status === "succeeded") {
                              showCardSuccess();
                              //submit the form
                              // document.getElementById('charge_form').submit();
                              saveTransaction(result);
                          }
                      }
                  })
              } catch (err) {
                  console.log(err)
                  showCardError('Invalid response from payment gateway')
                  showPayButtons();
              }
          })
  }

  function saveTransaction(result) {
    let payload = {
      first_name: "",
      last_name: "",
      name_on_card: document.getElementById("cardholder_name").value,
      email: document.getElementById("cardholder_email").value,
      amount: parseInt(document.getElementById("amount").value),
      currency: result.paymentIntent.currency,
      payment_amount: document.getElementById("amount").value,
      payment_intent: result.paymentIntent.id,
      payment_method: result.paymentIntent.payment_method,
    }

    let token = localStorage.getItem("token")

    const requestOptions = {
      method: "post",
      headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ' + token,
      },
      body: JSON.stringify(payload),
    }

    fetch("{{.API}}/api/admin/virtual-terminal-payment-succeeded", requestOptions)
    .then(response => response.json())
    .then(function (data) {
        console.log(data);
        processing.classList.add("d-none");
        showCardSuccess();
        let bankReturnCode = document.getElementById("bank-return-code");
        let receipt = document.getElementById("receipt");
        receipt.classList.remove("d-none");
        bankReturnCode.classList.remove("d-none");
        bankReturnCode.innerText= "    " + data.bank_return_code;
        document.getElementById("reset-button").classList.remove('d-none')
        processing.classList.add('d-none')

    })
  }

  (function () {
    //Create stripe & elements
    const elements = stripe.elements();
    const style = {
      base: {
        fontSize: '16px',
        lineHeight: '20px'
      }
    };

    //create cart entry
    card = elements.create('card', {
      style: style,
      hidePostalCode: true,
    });
    card.mount('#card-element')

    //check for input errors
    card.addEventListener('change', function (event) {
      var displayError = document.getElementById('card-errors');
      if (event.error) {
        displayError.classList.remove('d-none');
        displayError.classList.add('alert');
        displayError.textContent = event.error.message;
      } else {
        displayError.classList.add('d-none');
        displayError.classList.add('alert');
        displayError.textContent = '';
      }
    })
  })();
</script>
{{end}}