{{template "base" .}}

{{define "title"}}
    Virtual Terminal
{{end}}

{{define "content"}}
<div class="container">
    <h2 class="mt-3 text-center">Virtual teminal body</h2>
    <hr>
    <div class="alert alert-danger text-center d-none" id="card-messages"></div>
    <form action="" method="post"
        name="charge_form" id="charge_form"
            class="d-block needs-validation charge-form" autocomplete="off" novalidate="">

            <div class="mb-3">
                <label for="charge_amount" class="form-label">Amount</label>
                <input type="text" class="form-control" id="charge_amount" 
                    required="" autocomplete="charge_amount-new">
            </div>

            <div class="mb-3">
                <label for="cardholder_name" class="form-label">Name on Card</label>
                <input type="text" class="form-control" id="cardholder_name" name="cardholder_name" 
                    required="" autocomplete="cardholder_name-new">
            </div>

            <div class="mb-3">
                <label for="cardholder_email" class="form-label">Card Holder Email</label>
                <input type="text" class="form-control" id="cardholder_email" name="cardholder_email" 
                    required="" autocomplete="cardholder_email-new">
            </div>

            
            
            <!-- card number will be built by stripe -->
            <div class="mb-3">
                <label for="card-element" class="form-label">Credit Card</label>
                <div id="card-element" class="form-control"></div>
                <div class="alert-danger text-center" id="card-errors" role="alert"></div>
                <div class="alert-success text-center" id="card-success" role="alert"></div>
            </div>
            <hr>
            <div class="d-flex justify-content-center">
                <a href="javascript:void(0)" id="pay-button" class="btn btn-primary" onclick="val()">Validate & Charge Card</a>
                <div id="processing-payment" class="text-center d-none">
                    <div class="spinner-border text-success" role="status">
                        <span class="visually-hidden">Processing...</span>
                    </div>
                </div>
            </div>

            <!-- hidden fields -->
            <input type="hidden" name="amount" id="amount">
            <input type="hidden" name="payment_intent" id="payment_intent">
            <input type="hidden" name="payment_method" id="payment_method">
            <input type="hidden" name="payment_amount" id="payment_amount">
            <input type="hidden" name="payment_currency" id="payment_currency">
    </form>
</div>
<div class="row">
    <div class="col"></div>
    <div class="col m-2" id="receipt">
        <h3 class="mt-3 text-center">Receipt</h3>
        <hr>
        <div class="row"><strong>Bank Return Code</strong>: <span id="bank-return-code"></span></div>
        <div class="row text-center"><a href="/admin/virtual-terminal" class="btn btn-primary">Charge Another Card</a></div>
    </div>
    <div class="col"></div>
</div>
{{end}}

{{define "js"}}
    <script>
        checkAuth();
        document.getElementById("charge_amount").addEventListener("change", function(evt){
            if (evt.target.value !== ""){
                document.getElementById("amount").value = parseInt((evt.target.value * 100), 10);
            } else {
                document.getElementById("amount").value = 0;
            }
        })
    </script>
    <script src="https://js.stripe.com/v3/"></script>

    <script>
        let card;
        let stripe;
        const cardMessages = document.getElementById('card-messages');
        const payButton = document.getElementById('pay-button');
        const processing = document.getElementById('processing-payment')
        stripe = Stripe('{{.StripePublishableKey}}')
    
    
        function showPayButton(){
            payButton.classList.remove('d-none');
            processing.classList.add('d-none');
        }
    
        function hidePayButton(){
            payButton.classList.add('d-none');
            processing.classList.remove('d-none');
        }
    
        function showCardError(msg){
            cardMessages.classList.add('alert')
            cardMessages.classList.add('alert-danger')
            cardMessages.classList.remove('alert-success')
            cardMessages.classList.remove('d-none');
            processing.classList.remove('d-none');
            document.getElementById('card-errors').classList.add('d-none');
            cardMessages.innerText = msg
            
        }
    
        function showCardSuccess(){
            cardMessages.classList.add('alert')
            cardMessages.classList.add('alert-success')
            cardMessages.classList.remove('alert-danger')
            cardMessages.classList.remove('d-none');
            cardMessages.innerText = "Transaction Successful"
            processing.classList.add('d-none');
        }
    
        function val() {
            let form = document.getElementById('charge_form')
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add('was-validated');
                return
            }
            form.classList.add('was-validated');
            hidePayButton();
            
            let amountToCharge = document.getElementById('amount').value;
            let payload = {
                amount : amountToCharge,
                currency: 'cad',
            }
    
               const requestOptions = {
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload),
            }
    
            fetch('{{.API}}/api/payment-intent', requestOptions)
            .then(response => response.text())
            .then(response => {
                let data;
                try {
                    data = JSON.parse(response)
                    stripe.confirmCardPayment(data.client_secret, {
                        payment_method: {
                            card: card,
                            billing_details: {
                                name: document.getElementById('cardholder_name').value,
                            }   
                        }
                    }).then(function(result) {
                        if(result.error) {
                            //card declined, or something went wrong with the card
                            showCardError(result.error.message)
                            showPayButton();
                        } else if(result.paymentIntent) {
                            if(result.paymentIntent.status === "succeeded"){
                                showCardSuccess();
                                //submit the form
                                // document.getElementById('charge_form').submit();
                                saveTransaction(result);
                            }
                        }
                    })
                } catch(err) {
                    console.log(err)
                    showCardError('Invalid response from payment gateway')
                    showPayButtons();
                }
            })
        }

        function saveTransaction(result) {
            let payload = {
                first_name: "",
                last_name: "",
                name_on_card: document.getElementById("cardholder_name").value,
                email: document.getElementById("cardholder_email").value,
                amount: parseInt(document.getElementById("amount").value),
                currency: result.paymentIntent.currency,
                payment_amount: document.getElementById("amount").value,
                payment_intent: result.paymentIntent.id,
                payment_method: result.paymentIntent.payment_method,   
            }

            let token = localStorage.getItem("token")

            const requestOptions = {
                method: "post",
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token,
                },
                body: JSON.stringify(payload),
            }

            fetch("{{.API}}/api/admin/virtual-terminal-payment-succeeded", requestOptions)
            .then(response => response.json())
            .then(function(data){
                console.log(data);
                processing.classList.add("d-none");
                showCardSuccess();
                document.getElementById("bank-return-code").innerHTML = data.bank_return_code;
                document.getElementById("receipt").classList.add("d-block");
                document.getElementById("receipt").classList.add("justify-content-center");
                document.getElementById("receipt").classList.remove("d-none");
            })
        }
    
        (function() {
            //Create stripe & elements
            const elements = stripe.elements();
            const style = {
                base: {
                    fontSize: '16px',
                    lineHeight: '20px'
                }
            };
    
            //create cart entry
            card = elements.create('card', {
                style: style,
                hidePostalCode: true,
            });
            card.mount('#card-element')
    
            //check for input errors
            card.addEventListener('change', function(event) {
                var displayError = document.getElementById('card-errors');
                if (event.error) {
                    displayError.classList.remove('d-none');
                    displayError.classList.add('alert');
                    displayError.textContent = event.error.message;
                } else {
                    displayError.classList.add('d-none');
                    displayError.classList.add('alert');
                    displayError.textContent = '';
                }
            })
        })();
    </script>
    
    
{{end}}